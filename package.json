{
  "name": "electron-app",
  "version": "1.0.0",
  "description": "",
  "main": "./main.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "electron .",
    "build": "webpack --config webpack.renderer.config.js && webpack --config webpack.main.config.js",
    "electron:build": "electron-packager . electron-tutorial-app --overwrite --asar=true --platform=win32 --arch=x64 --icon=assets/icons/win/icon.ico --prune=true --out=release-builds",
    "package-win": "electron-packager . my-electron-app --platform=win32 --arch=x64 --out=dist --overwrite",
    "start:watch": "npx electronmon --trace-warnings .",
    "dist": "electron-builder"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "aws-sdk": "^2.1664.0",
    "bcrypt": "^5.1.1",
    "bootstrap": "^5.3.3",
    "electron-packager": "^17.1.2",
    "lodash": "^4.17.21",
    "mock-aws-s3": "^4.0.2",
    "mongoose": "^8.5.1",
    "nock": "^13.5.4",
    "p-queue": "^8.0.1",
    "react": "^18.3.1",
    "react-bootstrap": "^2.10.4",
    "react-dom": "^18.3.1",
    "react-router-dom": "^6.25.1"
  },
  "devDependencies": {
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@types/react-router-dom": "^5.3.3",
    "babel-loader": "^9.1.3",
    "clean-webpack-plugin": "^4.0.0",
    "css-loader": "^7.1.2",
    "electron": "^31.3.0",
    "electron-builder": "^24.13.3",
    "file-loader": "^6.2.0",
    "html-loader": "^5.1.0",
    "html-webpack-plugin": "^5.6.0",
    "null-loader": "^4.0.1",
    "style-loader": "^4.0.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.5.4",
    "webpack": "^5.93.0",
    "webpack-cli": "^5.1.4",
    "webpack-merge": "^6.0.1"
  },
  "build": {
    "asar": true,
    "appId": "com.example.electron-react-app",
    "productName": "app",
    "files": [
      "dist/**/*",
      "./build/**/*",
      "./src/electron-starter.js"
    ],
    "directories": {
      "output": "dist"
    },
    "win": {
      "target": "nsis",
      "icon": "assets/icon.ico"
    },
    "mac": {
      "target": "dmg",
      "icon": "assets/icon.icns"
    },
    "linux": {
      "target": "AppImage",
      "icon": "assets/icon.png"
    }
  }
}
